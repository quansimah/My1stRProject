map_data (map = "world", region = "Africa")
map('worldHires',
xlim=c(-20,60), # longitude
ylim=c(-35,40),
fill = TRUE)
?map
#
#
#
# COMPARING MAPS
#  making maps of the data
# Create an African map
world.map <- map_data(map = "world")
world.map
p<- ggplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white") +
xlim=(-20,60) + ylim=(-35,40) # longitude
p<- ggplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white") +
xlim=(-20,60) + ylim=(-35,40)
p<- ggplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white") + geompoint()
xlim =(-20,60) + ylim =(-35,40)
xlim =(-20, 60) + ylim =(-35, 40)
p<- ggplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white")
p
p<- ggplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white") +
xlim =(-20, 60) + ylim =(-35, 40)
p<- ggplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white") +
xlim = c(-20, 60) + ylim = c(-35, 40)
?aes
?xlim
plot.window (c(-20,60), c(-35,40))
plot.window (c(-20,60), c(-35,40))
p<- plot.window + gplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white")
p<- plot.window + ggplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white")
p
p<- ggplot(world.map, aes (x = long, y = lat, group = group)) +
geom_polygon(fill = "lightgray", colour = "white")
p
data.map <- left_join(debt.data, world.map,
by = c( "rep.export.Country.Name..3." = "region"))
# subset 2009 data
data.2009 <- subset(debt.data$years == "2009" )
# subset 2009 data
data.2009 <- subset(debt.data$years == "2009")
?subset
# subset 2009 data
data.2009 <- subset(debt.data,years == "2009")
data.2009
data.map <- left_join(data.2009, world.map,
by = c( "rep.export.Country.Name..3." = "region"))
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
# Setting the color scale
scale_fill_continuous(limits = c(0,17), low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = y)
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
# Setting the color scale
scale_fill_continuous(limits = c(0,17), low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = "2009")
data.plot
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous(limits = c(0,17), low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = "2009")
data.plot
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = "2009")
data.plot
debt.data$rep.export.Country.Name..3.
[debt.data$rep.export.Country.Name..3. == "Cote d'Ivoire"] <- "Ivory Coast"
debt.data$rep.export.Country.Name..3.
[debt.data$rep.export.Country.Name..3. == "Congo"] <- "Republic of Congo"
debt.data$rep.export.Country.Name..3.
[debt.data$rep.export.Country.Name..3. == "Democratic Republic of Congo"] <-
"Democratic Republic of the Congo"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3. == "Cote d'Ivoire"] <- "Ivory Coast"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3. == "Congo"] = "Republic of Congo"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3. == "Democratic Republic of Congo"] <-
"Democratic Republic of the Congo"
data.2009 <- subset(debt.data,years == "2009")
# subset 2014 data
data.2014 <- subset(debt.data,years == "2014")
#  subset 2019 data
data.2019 <- subset(debt.data,years == "2019")
data.map <- left_join(data.2009, world.map,
by = c( "rep.export.Country.Name..3." = "region"))
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = "2009")
data.plot
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3. == "Cote d'Ivoire"] <- "Ivory Coast"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3. == "Congo"]
<- "Republic of Congo"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3. == "Democratic Republic of Congo"]
<- "Democratic Republic of the Congo"
data.map <- left_join(data.2009, world.map,
by = c( "rep.export.Country.Name..3." = "region"))
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = "2009")
data.plot
View(debt.data)
View(debt.data)
== "Congo, Rep."] <- "Republic of Congo"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3.== " Congo, Rep. "] <- "Republic of Congo"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3. == "Congo, Dem. Rep."] <- "Democratic Republic of the Congo"
# subset 2009 data
data.2009 <- subset(debt.data,years == "2009")
# subset 2014 data
data.2014 <- subset(debt.data,years == "2014")
#  subset 2019 data
data.2019 <- subset(debt.data,years == "2019")
data.map <- left_join(data.2009, world.map,
by = c( "rep.export.Country.Name..3." = "region"))
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = "2009")
data.plot
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3.== " Congo, Rep. "] <- "Republic of the Congo"
# subset 2009 data
data.2009 <- subset(debt.data,years == "2009")
data.map <- left_join(data.2009, world.map,
by = c( "rep.export.Country.Name..3." = "region"))
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = "2009")
data.plot
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3.== " Congo, Rep. "] <- "Republic of Congo"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3.== " Congo, Rep."] <- "Republic of Congo"
debt.data$rep.export.Country.Name..3.[debt.data$rep.export.Country.Name..3.== "Congo, Rep."] <- "Republic of Congo"
# subset 2009 data
data.2009 <- subset(debt.data,years == "2009")
data.map <- left_join(data.2009, world.map,
by = c( "rep.export.Country.Name..3." = "region"))
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration", subtitle = "2009")
data.plot
# drawing the plot for 2009 data
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',
high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Financial Integration in SSA", subtitle = "2009")
range(debt.data$financial.integration, na.rm = T)
range(debt.data$log.financial.integration, na.rm = T)
# drawing the plot for 2009 data
data.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = log.financial.integration)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle(" Estimated Financial Integration in SSA", subtitle = "2009")
data.plot
# subset 2014 data
data.2014 <- subset(debt.data,years == "2014")
#  subset 2019 data
data.2019 <- subset(debt.data,years == "2019")
debt.stock.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = debt.stock)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Debt Stock (% GNI)", subtitle = "2009")
debt.stock.plot
debt.service.plot <- p + geom_polygon(data = data.map,
aes(x = long, y = lat, group = group,
fill = debt.service.cap)) +
xlim(-20,60) + ylim(-35,40) +
# Setting the color scale
scale_fill_continuous( low = 'white',high = 'red4' )  +
theme(legend.position = "top", plot.title = element_text(hjust = 0.5)) +
ggtitle("Debt Service Capabilities", subtitle = "2009")
debt.service.plot
# plot debt.stock by year
this.plot <- plot(factor(debt.data$years), debt.data$debt.stock)
that.plot <- plot(factor(debt.data$years), debt.data$financial.integration)
that.plot <- plot(factor(debt.data$years), debt.data$log.financial.integration)
the.plot <- plot(factor(debt.data$years),debt.data$debt.service.cap)
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
raw.dsf.plot <- stripchart(debt.stock ~ round(log.financial.integration,2),
data = data.2009,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# insert a line of best fit
y<- lm(debt.stock ~ log.financial.integration, data = data.2009)
abline(y)
plot(y)
trace.factor = debt.data$years,
legend = FALSE, lty = 1, xlab = "Financial Integration",
ylab = "Debt stock", type = "b", pch = 16, las = 1,
cex = 1.5)
plot(y)
cor(data.2009$log.financial.integration, data.2009$debt.stock)
?cor
# absolutely horrible
cor(data.2009$log.financial.integration, data.2009$debt.stock, na.rm = T)
# absolutely horrible
cor(data.2009$log.financial.integration, data.2009$debt.stock, na.rm = TRUE)
# absolutely horrible
cor.test(data.2009$log.financial.integration, data.2009$debt.stock)
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
raw.dsf.plot <- stripchart(debt.stock ~ round(log.financial.integration,2),
data = data.2009,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
max(data.2009$debt.stock, na.rm = T)
max(data.2009$debt.stock, na.rm = T)[]
max(data.2009$debt.stock, na.rm = T)[,]
which(max(data.2009$debt.stock, na.rm = T))
which.max(data.2009$debt.stock)
data.2009[,]
data.2009[25,]
new.data.2009
new.data.2009 <- data.2009[-25,]
View(new.data.2009)
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
raw.dsf.plot <- stripchart(debt.stock ~ round(log.financial.integration,2),
data = new.data.2009,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
raw.dsf.plot
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
raw.dsf.plot <- stripchart(debt.stock ~ round(log.financial.integration,2),
data = new.data.2009,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
which.max(new.data.2009$debt.stock)
max(new.data.2009$debt.stock)
max(new.data.2009$debt.stock,na.rm = T)
# insert a line of best fit
y<- lm(debt.stock ~ log.financial.integration, data = new.data.2009)
abline(y)
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
raw.dsf.plot <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2009,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# insert a line of best fit
y<- lm(debt.stock ~ log.financial.integration, data = data.2009,
na.action = na.exclude)
abline(y)
# run a correlation test
cor.test(data.2009$debt.stock, data.2009$log.financial.integration)
# for 2019
plot.2019 <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2019,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# run a correlation test
cor.test(data.2019$debt.stock, data.2019$log.financial.integration)
# insert a line of best fit
z<- lm(debt.stock ~ log.financial.integration, data = data.2019,
na.action = na.exclude)
abline(z)
# no statistically significant correlation
# seems to be affected by the extreme value
# remove extreme value and start again
which.max(data.2019$debt.stock)
data.2019[31,]
new.data.2019 <- data.2019[-31,]
# do correlation again
cor.test(new.data.2019$debt.stock, new.data.2019$log.financial.integration)
# insert a line of best fit
z<- lm(debt.stock ~ log.financial.integration, data = data.2019,
na.action = na.exclude)
abline(z)
abline(z)
plot(z)
legend = FALSE, lty = 1, xlab = "Financial Integration",
ylab = "Debt stock", type = "b", pch = 16, las = 1,
cex = 1.5)
# making a linear mixed effect model
z <- lmer( debt.stock ~ log.financial.integration + (1|years), data = debt.data)
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
plot.2009 <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2009,pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
plot.2009 <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2009,vertical= TRUE, pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# for 2019
plot.2019 <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2019,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# insert a line of best fit
z<- lm(debt.stock ~ log.financial.integration, data = data.2019,
na.action = na.exclude)
abline(z)
plot(z)
sum(fi.2009)
sum(fi.2009,na.rm = T)
# make new column with score
# for 2009
fi.sum <- sum(fi.2009,na.rm = T)
fiscore <- (fi.val[,i]/fi.sum)*100
fiscore <- (fi.val[ ,i]/fi.sum)*100
fiscore <- (fi.2009/fi.sum)*100
fiscore
# make new column with score
# for 2009
fi.max<- max(fi.2009,na.rm = T)
max(fi.2009,na.rm = T)
fiscore <- (fi.2009/fi.max)*100
fiscore
# for 2014
fi.max.2 <- max(fi.2014, na.rm =T)
fi.score2 <- (fi.2014/fi.max.2) *100
fi.score2
# for 2019
fi.max.3 <- max(fi.2019, na.rm = T)
fi.score.3 <- (fi.2019/fi.max.3)*100
fi.score.3
debt.clean$financial.int.score <- c(fiscore,fi.score2,fi.score.3)
# write debt.clean as a csv in path.data.clean
write.csv(debt.clean, paste(path.data.clean,"debt.clean.csv", sep = ""),
row.names = FALSE)
# read csv
debt.data <- read.csv(paste(path.data.clean,"debt.clean.csv",
sep = ""),
stringsAsFactors = FALSE,
strip.white = TRUE)
head(debt.data)
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
plot.2009 <- stripchart(debt.stock ~ fi.int.score,
data =data.2009,vertical= TRUE, pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
plot.2009 <- stripchart(debt.stock ~ financial.int.score,
data =data.2009,vertical= TRUE, pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# subset 2009 data
data.2009 <- subset(debt.data,years == "2009")
# subset 2014 data
data.2014 <- subset(debt.data,years == "2014")
#  subset 2019 data
data.2019 <- subset(debt.data,years == "2019")
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
plot.2009 <- stripchart(debt.stock ~ financial.int.score,
data =data.2009,vertical= TRUE, pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# run a correlation test
cor.test(data.2009$debt.stock, data.2009$log.financial.integration)
# insert a line of best fit
y<- lm(debt.stock ~ log.financial.integration, data = data.2009,
na.action = na.exclude)
abline(y)
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
plot.2009 <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2009,vertical= TRUE, pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock")
# run a correlation test
cor.test(data.2009$debt.stock, data.2009$log.financial.integration)
# insert a line of best fit
y<- lm(debt.stock ~ log.financial.integration, data = data.2009,
na.action = na.exclude)
abline(y)
# run a correlation test
cor.test(data.2019$debt.stock, data.2019$log.financial.integration)
# do correlation again
cor.test(new.data.2019$debt.stock, new.data.2019$log.financial.integration)
# for 2019
plot.2019 <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2019,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "2019")
# insert a line of best fit
z<- lm(debt.stock ~ log.financial.integration, data = data.2019,
na.action = na.exclude)
abline(z)
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
plot.2009 <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2009,vertical= TRUE, pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "2009")
# insert a line of best fit
y<- lm(debt.stock ~ log.financial.integration, data = data.2009,
na.action = na.exclude)
abline(y)
# insert a line of best fit
z<- lm(debt.stock ~ poly(log.financial.integration,10), data = data.2019,
na.action = na.exclude)
# insert a line of best fit
z<- lm(debt.stock ~ poly(log.financial.integration,10,na.rm =T), data = data.2019,
na.action = na.exclude)
?poly
data.2019.new <- na.omit(data.2019)
# insert a line of best fit
z<- lm(debt.stock ~ poly(log.financial.integration,10,na.rm =T), data =
data.2019.new,
na.action = na.exclude)
# insert a line of best fit
z<- lm(debt.stock ~ poly(log.financial.integration,10), data =
data.2019.new,
na.action = na.exclude)
abline(z)
# for 2019
plot.2019 <- stripchart(debt.stock ~ round(log.financial.integration,2),
data =data.2019.new,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "2019")
# insert a line of best fit
z<- lm(debt.stock ~ poly(log.financial.integration,10), data =
data.2019.new)
abline(z)
# inspect series names
unique(debt.raw$ï..Series.Name)
