kde <- kde2d(coefs[, 1], coefs[, 2])
# loop sampling and estimation of our model
for (i in 1:10000) {
coefs[i,] <- lm(Y ~X1 +X2, data=sim.data)$coefficients[- 1]
}
# compute density estimate
kde <- kde2d(coefs[, 1], coefs[, 2])
# compute density estimate
kde <- kde2d(coefs[, 1], coefs[, 2])
# loop sampling and estimation of our model
for (i in 1:10000) {
coefs[i,] <- lm(Y ~X1 +X2, data=sim.data)$coefficients[- 3]
}
# compute density estimate
kde <- kde2d(coefs[, 1], coefs[, 2])
# compute density estimate
kde <- kde2d(coefs[, 1], coefs[, 2])
coefs
?kde2d
# loop sampling and estimation of our model
for (i in 1:10000) {
coefs[i,] <- lm(Y ~ X1 +X2, data=sim.data)$coefficients[- 1]
}
# compute density estimate
kde <- kde2d(coefs[, 1], coefs[, 2])
# compute density estimate
kde <- kde2d(coefs[, abs(1)], coefs[, 2])
# compute density estimate
kde <- kde2d(coefs[,1], coefs[,2],
h = c(ifelse(bandwidth.nrd(coefs[,1]) == 0, 0.1, bandwidth.nrd(coefs[,1])),
ifelse(bandwidth.nrd(coefs[,2]) == 0, 0.1, bandwidth.nrd(coefs[,2]))))
# plot density estimate
persp(kde,
theta = 310,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density")
# plot density estimate
persp(kde,
theta = 30,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density")
# loop sampling and estimation of our model
for (i in 1:200) {
coefs[i,] <- lm(Y ~ X1 +X2, data=sim.data)$coefficients[- 1]
}
kde <- kde2d(coefs[,1], coefs[,2])
# compute density estimate
kde <- kde2d(coefs[, 1], coefs[, 2])
# compute density estimate
kde <- kde2d(coefs[,1], coefs[,2],
h = c(ifelse(bandwidth.nrd(coefs[,1]) == 0, 0.1, bandwidth.nrd(coefs[,1])),
ifelse(bandwidth.nrd(coefs[,2]) == 0, 0.1, bandwidth.nrd(coefs[,2]))))
source('~/R/My1stRProject/multiple.regression.R', echo=TRUE)
kde
kde <- kde2d(coefs[,1], coefs[,2])
# set seed for reproducibility
set.seed(1)
# loop sampling and estimation of our model
for (i in 1:10000) {
X <- rmvnorm(50, c(25, 50), sigma = cbind(c(5, 1.25), c(1.25, 10)))
u <- rnorm(50, sd = 5)
Y <- 5 + 2.5 * X[, 1] + 3 * X[, 2] + u
coefs[i,] <- lm(Y ~ X[,1] +X[,2], data= sim.data)$coefficients[- 1]
}
# loop sampling and estimation of our model
for (i in 1:10000) {
A<- rmvnorm(50, c(25, 50), sigma = cbind(c(5, 1.25), c(1.25, 10)))
e <- rnorm(50, sd = 5)
B <- 5 + 2.5 * X[, 1] + 3 * X[, 2] + e
coefs[i,] <- lm(B ~ A[,1] + A[,2])$coefficients[- 1]
}
kde <- kde2d(coefs[,1], coefs[,2])
# plot density estimate
persp(kde,
theta = 30,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density")
A
# ===== CONCLUSION =============================================================
# Our original simulated data showed a true model of :
# Y = 5 + 2.5 * X[, 1] + 3 * X[, 2] + u
# linearMod estimated that Y=
linearMod
# ===== CONCLUSION =============================================================
# Our original simulated data showed a true model of :
# Y = 5 + 2.5 * X[, 1] + 3 * X[, 2] + u
# linearMod estimated that Y= 105.308 + 4.436*X[,1]
# mult.mod estimated that Y =
mult.mod
# Read csv
debt.data <- read.csv(paste(path.data.clean,"debt.clean.csv",
sep = ""),
stringsAsFactors = FALSE,
strip.white = TRUE, na.strings = "NA")
head(debt.data)
# subset 2009 data
data.2009 <- subset(debt.data,years == "2009")
# subset 2014 data
data.2014 <- subset(debt.data,years == "2014")
#  subset 2019 data
data.2019 <- subset(debt.data,years == "2019")
# ======= DEBT STOCK REGRESSION ================================================
# do a simple linear regression
# plotting speed against distance
scatter.smooth(x= debt.data$financial.integration,
y= debt.data$debt.stock, main ="Debt stock~ financial integration")
par(mfrow = c(1,2))  # diving graph area in 2 columns
# make a box plot for speed
boxplot(debt.data$financial.integration, main = "Speed",
sub = paste("Outlier rows:",
boxplot.stats(debt.data$financial.integration)$out))
# make a box plot for speed
boxplot(debt.data$financial.integration, main = "Financial Integration")
par(mfrow = c(1,2))  # diving graph area in 2 columns
# make a box plot for speed
boxplot(debt.data$financial.integration, main = "Financial Integration")
boxplot.stats(debt.data$financial.integration)$out))
boxplot.stats(debt.data$financial.integration)$out)
# find outliers
boxplot.stats((debt.data$financial.integration)$out)
# find outliers
boxplot.stats(debt.data$financial.integration)
# make vector of outliers
fi.out <- c(17700686746, 32132536118, 36607977032,
56197765491, 18027049171, 10689168577,
33128223077, 53612271731)
# make a box plot for debt stock
boxplot(debt.data$debt.stock, main = "Debt Stock")
boxplot.stats(cars$dist)$out))
boxplot.stats(cars$dist)$out
boxplot.stats(cars$dist)
boxplot.stats(debt.data$debt.stock)$out
# create vector of outliers
ds.out <- boxplot.stats(debt.data$debt.stock)$out
# find outliers
boxplot.stats(debt.data$financial.integration)[]
which(debt.data$debt.stock == ds.out)
which(debt.data$debt.stock == c(ds.out))
# making a density plot for speed
plot(density(debt.data$debt.stock), main = "Density Plot: Debt.stock",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$debt.stock),2)))
# making a density plot for debt.stock
plot(density(debt.data$debt.stock,na.rm = T), main = "Density Plot: Debt.stock",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$debt.stock),2)))
# making the polygon red
polygon(density(cars$speed), col = 'red')
# making a density plot for debt.stock
plot(density(debt.data$debt.stock,na.rm = T), main = "Density Plot: Debt.stock",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$debt.stock),2)))
# making the polygon red
polygon(density(debt.data$debt.stock), col = 'red')
# making the polygon red
polygon(density(debt.data$debt.stock, na.rm =T), col = 'red')
# making a density plot for debt.stock
plot(density(debt.data$debt.stock,na.rm = T), main = "Density Plot: Debt.stock",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$debt.stock, na.rm = T),2)))
par(mfrow = c(1,2))  # diving graph area in 2 columns
# make a box plot for financial integration
boxplot(debt.data$financial.integration, main = "Financial Integration")
# find outliers
boxplot.stats(debt.data$financial.integration)[]
# make a box plot for debt stock
boxplot(debt.data$debt.stock, main = "Debt Stock")
# making a density plot for debt.stock
plot(density(debt.data$debt.stock,na.rm = T), main = "Density Plot: Debt.stock",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$debt.stock, na.rm = T),2)))
# making the polygon red
polygon(density(debt.data$debt.stock, na.rm =T), col = 'red')
plot(density(cars$dist), main = "Density Plot:Distance",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(cars$dist),2)))
# making the polygon red
polygon(density(cars$dist), col = 'red')
# Skewness = 0.76
# It is quite positively skewed
# making a density plot for debt.stock
plot(density(debt.data$debt.stock,na.rm = T), main = "Density Plot: Debt.stock",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$debt.stock, na.rm = T),2)))
# making the polygon red
polygon(density(debt.data$debt.stock, na.rm =T), col = 'red')
# making a density plot for financial integration
plot(density(debt.data$financial.integration,na.rm = T),
main = "Density Plot: Financial.Integration",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$financial.integration,
na.rm = T),2)))
# making the polygon red
polygon(density(debt.data$financial.integration, na.rm =T), col = 'red')
# run a correlation test
cor.test(debt.data$debt.stock,debt.data$financial.integration)
# what happens when we make a linear model of this poorly structured data
debt.mod<- lm(debt.stock ~ financial.integration, data = debt.data,
na.action = na.exclude)
debt.mod
# see if a polynomial fit will be better
debt.mod_2 <- lm(debt.stock ~ financial.integration + I(financial.integration^2),
data = debt.data )
debt.mod_2
# let's visualize how well these lines fit the data
# let's plot our data
debt.plot<- stripchart(debt.stock ~ financial.integration,
data =debt.data,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "2009,2014,2019")
# let's visualize how well these lines fit the data
# set margins back to normal
par(mfrow = c(1,1))
# let's plot our data
debt.plot<- stripchart(debt.stock ~ financial.integration,
data =debt.data,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "2009,2014,2019")
# let's plot our data
debt.plot<- stripchart(debt.stock ~ financial.integration,
data =debt.data,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "Debt stock ~ Financial Integration")
# overlay both models on the data
abline(debt.mod)
abline(debt.mod_2)
# what happens when I take into account the years
mult.debt.mod<- lm(debt.stock ~ factor(years) + financial.integration, data =
debt.data)
mult.debt.mod
# All 3 models did not tell us much
# But, let us compare their adjusted R-squared values
summary(debt_mod)
# All 3 models did not tell us much
# But, let us compare their adjusted R-squared values
summary(debt.mod)
# for the polynomial regression model
summary(debt.mod_2)
# for the multiple regression model
summary(mult.debt.mod)
pdf("../5.figures/FlorenceProject.pdf", height = 5, width = 8)
pdf("../5.figures/simple.linear.regression.pdf", height = 5, width = 8)
slr.plot
par(mfrow = c(1,2))
boxplot(sim.data$X1, main = "X1",
sub = paste("Outlier rows:",
boxplot.stats(sim.data$X1)$out))
boxplot(sim.data$Y, main = "Y",
sub = paste("Outlier rows:",
boxplot.stats(sim.data$Y)$out))
plot(density(sim.data$X1), main = "Density Plot:X1",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(sim.data$X1),2)))
polygon(density(sim.data$X1), col = 'red')
plot(density(sim.data$Y), main = "Density Plot:Y",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(sim.data$Y),2)))
polygon(density(sim.data$Y), col = 'red')
par(mfrow = c(1,1))
cvResults
dev.off()
pdf("../4.figures/simple.linear.regression.pdf", height = 5, width = 8)
slr.plot
par(mfrow = c(1,2))
boxplot(sim.data$X1, main = "X1",
sub = paste("Outlier rows:",
boxplot.stats(sim.data$X1)$out))
boxplot(sim.data$Y, main = "Y",
sub = paste("Outlier rows:",
boxplot.stats(sim.data$Y)$out))
plot(density(sim.data$X1), main = "Density Plot:X1",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(sim.data$X1),2)))
polygon(density(sim.data$X1), col = 'red')
plot(density(sim.data$Y), main = "Density Plot:Y",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(sim.data$Y),2)))
polygon(density(sim.data$Y), col = 'red')
par(mfrow = c(1,1))
cvResults
dev.off()
slr.plot
slr.plot <- scatter.smooth(x= sim.data$X1, y= sim.data$Y, main ="X1~ Y",
pch =16, col = 'red', xlab = "X1", ylab = "Y")
pdf("4.figures/simple.linear.regression.pdf", height = 5, width = 8)
pdf("4.figures/simple.linear.regression.pdf", height = 5, width = 8)
slr.plot
par(mfrow = c(1,2))
boxplot(sim.data$X1, main = "X1",
sub = paste("Outlier rows:",
boxplot.stats(sim.data$X1)$out))
boxplot(sim.data$Y, main = "Y",
sub = paste("Outlier rows:",
boxplot.stats(sim.data$Y)$out))
plot(density(sim.data$X1), main = "Density Plot:X1",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(sim.data$X1),2)))
polygon(density(sim.data$X1), col = 'red')
plot(density(sim.data$Y), main = "Density Plot:Y",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(sim.data$Y),2)))
polygon(density(sim.data$Y), col = 'red')
par(mfrow = c(1,1))
cvResults
dev.off()
slr.plot
slr.plot <- scatter.smooth(x= sim.data$X1, y= sim.data$Y, main ="X1~ Y",
pch =16, col = 'red', xlab = "X1", ylab = "Y")
# make plot
cvResults <- suppressWarnings( CVlm (sim.data, form.lm = Y ~ X1,
m=10, dots=FALSE, seed=29,
legend.pos="topleft",  printit=FALSE,
main="10-Fold Cross Validation"))
pdf("4.figures/simple.linear.regression.pdf", height = 5, width = 8)
slr.plot <- scatter.smooth(x= sim.data$X1, y= sim.data$Y, main ="X1~ Y",
pch =16, col = 'red', xlab = "X1", ylab = "Y")
par(mfrow = c(1,2))
boxplot(sim.data$X1, main = "X1",
sub = paste("Outlier rows:",
boxplot.stats(sim.data$X1)$out))
boxplot(sim.data$Y, main = "Y",
sub = paste("Outlier rows:",
boxplot.stats(sim.data$Y)$out))
plot(density(sim.data$X1), main = "Density Plot:X1",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(sim.data$X1),2)))
polygon(density(sim.data$X1), col = 'red')
plot(density(sim.data$Y), main = "Density Plot:Y",
ylab = "Frequency", sub = paste("Skewness:",
round(e1071::skewness(sim.data$Y),2)))
polygon(density(sim.data$Y), col = 'red')
par(mfrow = c(1,1))
cvResults <- suppressWarnings( CVlm (sim.data, form.lm = Y ~ X1,
m=10, dots=FALSE, seed=29,
legend.pos="topleft",  printit=FALSE,
main="10-Fold Cross Validation"))
dev.off()
# ===== ASSUMPTION PLOT ========================================================
pdf("4.figures/assumptions.pdf", height = 5, width = 8)
par(mfrow =c(2,2))
plot(linearMod)
par(mfrow = c(1,1))
acf(linearMod$residuals)
dev.off()
# ==============================================================================
pdf("4.figures/multiple.regression.pdf", height = 5, width = 8)
corrplot(cor(sim.data[,-3]))
persp(kde,
theta = 30,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density",
main = "Distribution of Model Estimates")
dev.off()
?corrplot
pdf("4.figures/multiple.regression.pdf", height = 5, width = 8)
corrplot(cor(sim.data[,-3]), title = "Collinearity of Regressors")
?corrplot
persp(kde,
theta = 30,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density",
main = "Distribution of Model Estimates")
dev.off()
pdf("4.figures/multiple.regression.pdf", height = 6, width = 8)
corrplot(cor(sim.data[,-3]), title = "Collinearity of Regressors")
?corrplot
persp(kde,
theta = 30,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density",
main = "Distribution of Model Estimates")
dev.off()
pdf("4.figures/multiple.regression.pdf", height = 5, width = 8)
corrplot(cor(sim.data[,-3]))
?corrplot
persp(kde,
theta = 30,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density",
main = "Distribution of Model Estimates")
dev.off()
persp(kde,
theta = 310,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density",
main = "Distribution of Model Estimates")
persp(kde,
theta = 30,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density",
main = "Distribution of Model Estimates")
pdf("4.figures/multiple.regression.pdf", height = 5, width = 8)
corrplot(cor(sim.data[,-3]))
persp(kde,
theta = 310,
phi = 30,
xlab = "beta_1",
ylab = "beta_2",
zlab = "Est. Density",
main = "Distribution of Model Estimates")
dev.off()
?stripchart
debt.plot<- stripchart(debt.stock ~ financial.integration,
data =debt.data,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "Debt stock ~ Financial Integration") +
abline(debt.mod) + abline(debt.mod_2)
?abline
debt.plot<- stripchart(debt.stock ~ financial.integration,
data =debt.data,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "Debt stock ~ Financial Integration") +
abline(debt.mod) + abline(debt.mod_2, col ='blue')
pdf("4.figures/debtdata.analysis.pdf", height = 5, width = 8)
scatter.smooth(x= debt.data$financial.integration,
y= debt.data$debt.stock, main ="Debt stock~ financial integration")
par(mfrow = c(1,2))
boxplot(debt.data$financial.integration, main = "Financial Integration")
boxplot(debt.data$debt.stock, main = "Debt Stock")
par(mfrow=c(1,2))
plot(density(debt.data$debt.stock,na.rm = T), main = "Density Plot: Debt.stock",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$debt.stock, na.rm = T),2)))
polygon(density(debt.data$debt.stock, na.rm =T), col = 'red')
plot(density(debt.data$financial.integration,na.rm = T),
main = "Density Plot: Financial.Integration",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$financial.integration,
na.rm = T),2)))
polygon(density(debt.data$financial.integration, na.rm =T), col = 'red')
par(mfrow = c(1,1))
debt.plot<- stripchart(debt.stock ~ financial.integration,
data =debt.data,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "Debt stock ~ Financial Integration") +
abline(debt.mod) + abline(debt.mod_2, col ='blue')
dev.off()
pdf("4.figures/debtdata.analysis.pdf", height = 5, width = 8)
scatter.smooth(x= debt.data$financial.integration,
y= debt.data$debt.stock,
main ="Debt stock~ financial integration",
xlab = "Financial Integration",
ylab = "Debt Stock")
par(mfrow = c(1,2))
boxplot(debt.data$financial.integration, main = "Financial Integration")
boxplot(debt.data$debt.stock, main = "Debt Stock")
par(mfrow=c(1,2))
plot(density(debt.data$debt.stock,na.rm = T), main = "Density Plot: Debt.stock",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$debt.stock, na.rm = T),2)))
polygon(density(debt.data$debt.stock, na.rm =T), col = 'red')
plot(density(debt.data$financial.integration,na.rm = T),
main = "Density Plot: Financial.Integration",
ylab = "Frequency",
sub = paste("Skewness:",round(e1071::skewness(debt.data$financial.integration,
na.rm = T),2)))
polygon(density(debt.data$financial.integration, na.rm =T), col = 'red')
par(mfrow = c(1,1))
debt.plot<- stripchart(debt.stock ~ financial.integration,
data =debt.data,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "Debt stock ~ Financial Integration") +
abline(debt.mod) + abline(debt.mod_2, col ='blue')
dev.off()
debt.plot_2<- stripchart(debt.stock ~ financial.integration +factor(years),
data =debt.data,
vertical = TRUE,
pch = 16,
cex = 1.5, las = 1, col = "firebrick",
xlab = "Financial Integration", ylab = "Debt Stock",
main = "Debt stock ~ Financial Integration")
abline(debt.mod_2)
plot(mult.mod)
